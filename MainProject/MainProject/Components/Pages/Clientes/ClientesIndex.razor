@page "/ClientesIndex"

@inject ClientesService clienteService;
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime


<EditForm Model="ListaClientes" class="border shadow-lg p-3 rounded">
    <div class="card-header bg-primary text-white text-center py-2 rounded">
        <h3 style="font-weight: bold;" class="mb-0 font-weight-bold">Consulta Clientes</h3>
    </div>
    <div class="card-body">
        <div class="row mb-3 align-items-end">
            <div class="col-md-3">
                <label for="Filtro" class="form-label">Filtrar por:</label>
                <select @bind="filtro" class="form-select">
                    <option value="id">ID</option>
                    <option value="nombre">Nombre</option>
                    <option value="rnc">RNC</option>
                </select>
            </div>
            <div class="col-md-6">
                <label for="ValorFiltro" class="form-label">Búsqueda:</label>
                <div class="input-group">
                    <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                    <button @onclick="Buscar" class="btn btn-outline-primary" type="button">
                        <span class="fas fa-search"></span> Buscar
                    </button>
                </div>
            </div>
            <div class="col-md-3 text-end">
                <a href="/CreateClientes" class="btn btn-success" type="button"><span class="fas fa-plus"></span> Crear </a>
            </div>
        </div>
    </div>
    <table class="table table-bordered text-center">
        <thead class="bg-primary text-white">
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>RNC</th>
                <th>Teléfono</th>
                <th>Celular</th>
                <th>Email</th>
                <th>Dirección</th>
                <th>Editar</th>
                <th>Detalle</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cliente in ListaClientes)
            {
                <tr>
                    <td>@cliente.ClienteId</td>
                    <td>@cliente.NombreCliente</td>
                    <td>@cliente.RNCCliente</td>
                    <td>@cliente.TelefonoCliente</td>
                    <td>@cliente.CelularCliente</td>
                    <td>@cliente.EmailCliente</td>
                    <td>@cliente.DireccionCliente</td>
                    <td>
                        <a href="/EditClientes/@cliente.ClienteId" style="border: none; background-color: transparent;" class="btn-editar">
                            <span class="bi bi-marker-tip" style="font-size: 2rem;"></span>
                        </a>

                    </td>
                    <td>
                        <a href="/DetailsClientes/@cliente.ClienteId" style="border: none; background-color: transparent;" class="btn-detalle">
                            <span class="bi bi-info-circle-fill" style="font-size: 2rem;"></span>
                        </a>

                    </td>
                    <td>
                        <a href="/DeleteClientes/@cliente.ClienteId" style="border: none; background-color: transparent;" class="btn-eliminar">
                            <span class="bi bi-dash-circle-fill" style="font-size: 2rem;"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</EditForm>


@code {

    public Clientes Clientes = new Clientes();

    public List<Clientes> ListaClientes = new List<Clientes>();

    private string filtro = "id";
    private string valorFiltro = "";

    protected override async Task OnInitializedAsync()
    {
        ListaClientes = await clienteService.Listar(c => true);
    }


    public async Task Guardar()
    {
        var guardo = await clienteService.Guardar(Clientes);

    }


    private async Task Buscar()
    {
        if (valorFiltro.Trim() != "")
        {
            if (filtro == "id" && int.TryParse(valorFiltro, out int clienteId))
            {
                ListaClientes = await clienteService.Listar(c => c.ClienteId == clienteId);
            }

            else if (filtro == "nombre")
            {
                ListaClientes = await clienteService.Listar(c => c.NombreCliente == valorFiltro);
            }
            else if (filtro == "rnc")
            {
                ListaClientes = await clienteService.Listar(c => c.RNCCliente == valorFiltro);
            }
        }
        else
        {
            ListaClientes = await clienteService.Listar(c => true);
        }
    }

}
